
from src.data_utils.load_data import get_all_instances
import random
import jsonlines

dataset_path = "/Users/hongjeon/scpd/224n/cs224n-project/natural-instructions"
similar_tasks = [
"task128_scan_structured_text_generation_command_action_short",
    "task126_scan_structured_text_generation_command_action_all",
    "task127_scan_long_text_generation_action_command_all",
    "task129_scan_long_text_generation_action_command_short",
    "task159_check_frequency_of_words_in_sentence_pair",
    "task161_count_words_containing_letter",
    "task377_remove_words_of_given_length",
    "task113_count_frequency_of_letter",
    "task523_find_if_numbers_or_alphabets_are_more_in_list",
    "task622_replace_alphabets_in_a_list_by_their_position_in_english_alphabet",
    "task488_extract_all_alphabetical_elements_from_list_in_order",
    "task091_all_elements_from_index_i_to_j",
    "task064_all_elements_except_first_i",
    "task078_all_elements_except_last_i",
    "task063_first_i_elements",
    "task1551_every_ith_element_from_kth_element",
    "task099_reverse_elements_between_index_i_and_j",
    "task497_extract_all_numbers_from_list_in_order",
    "task506_position_of_all_alphabetical_elements_in_list",
    "task507_position_of_all_numerical_elements_in_list",
    "task505_count_all_numerical_elements_in_list",
    "task1542_every_ith_element_from_starting",
    "task504_count_all_alphabetical_elements_in_list",
    "task509_collate_of_all_alphabetical_and_numerical_elements_in_list_separately",
    "task100_concatenate_all_elements_from_index_i_to_j",
    "task636_extract_and_sort_unique_alphabets_in_a_list",
    "task637_extract_and_sort_unique_digits_in_a_list",
    "task101_reverse_and_concatenate_all_elements_from_index_i_to_j",
    "task267_concatenate_and_reverse_all_elements_from_index_i_to_j",
    "task372_synthetic_palindrome_numbers",
    "task499_extract_and_add_all_numbers_from_list",
    "task374_synthetic_pos_or_neg_calculation",
    "task606_sum_of_all_numbers_in_list_between_positions_i_and_j",
    "task370_synthetic_remove_divisible_by_3",
    "task756_find_longert_substring_and_return_all_unique_alphabets_in_it",
    "task373_synthetic_round_tens_place",
    "task367_synthetic_remove_floats",
    "task1446_farthest_integers",
    "task1445_closest_integers",
    "task852_synthetic_multiply_odds",
    "task371_synthetic_product_of_list",
    "task368_synthetic_even_or_odd_calculation",
    "task851_synthetic_multiply_evens",
    "task369_synthetic_remove_odds",
    "task605_find_the_longest_common_subsequence_in_two_lists",
    "task366_synthetic_return_primes",
    "task1444_round_power_of_two",
    "task600_find_the_longest_common_substring_in_two_strings",
    "task1443_string_to_number",
    "task755_find_longest_substring_and_replace_its_sorted_lowercase_version_in_both_lists",
    "task378_reverse_words_of_given_length",
    "task376_reverse_order_of_words",
    "task850_synthetic_longest_palindrome",
    "task157_count_vowels_and_consonants",
    "task365_synthetic_remove_vowels",
    "task087_new_operator_addsub_arithmetic",
    "task085_unnatural_addsub_arithmetic",
    "task160_replace_letter_in_a_sentence",
    "task210_logic2text_structured_text_generation",
    "task672_nummersense",
    "task110_logic2text_sentence_generation",
    "task212_logic2text_classification",
    "task092_check_prime_classification",
    "task176_break_decompose_questions",
    "task184_break_generate_question",
    "task1308_amazonreview_category_classification",
    "task1420_mathqa_general",
    "task1507_boolean_temporal_reasoning",
    "task1412_web_questions_question_answering",
    "task617_amazonreview_category_text_generation",
    "task089_swap_words_verification",
    "task820_protoqa_answer_generation",
    "task143_odd-man-out_classification_generate_category",
    "task153_tomqa_find_location_hard_clean",
    "task154_tomqa_find_location_hard_noise",
    "task390_torque_text_span_selection",
    "task1207_atomic_classification_atlocation",
    "task1211_atomic_classification_hassubevent",
    "task1199_atomic_classification_xattr",
    "task1198_atomic_classification_owant",
    "task1214_atomic_classification_xwant",
    "task1197_atomic_classification_oreact",
    "task1204_atomic_classification_hinderedby",
    "task1200_atomic_classification_xeffect",
    "task1206_atomic_classification_isbefore",
    "task1212_atomic_classification_hasproperty",
    "task1202_atomic_classification_xneed",
    "task1205_atomic_classification_isafter",
    "task1203_atomic_classification_xreact",
    "task1196_atomic_classification_oeffect",
    "task1201_atomic_classification_xintent",
    "task1215_atomic_classification_capableof",
    "task579_socialiqa_classification",
    "task1209_atomic_classification_objectuse",
    "task403_creak_commonsense_inference",
    "task1327_qa_zre_answer_generation_from_question",
    "task924_event2mind_word_generation",
    "task1309_amazonreview_summary_classification",
    "task582_naturalquestion_answer_generation",
    "task080_piqa_answer_generation",
    "task385_socialiqa_incorrect_answer_generation",
    "task152_tomqa_find_location_easy_noise",
    "task580_socialiqa_answer_generation",
    "task165_mcscript_question_answering_commonsense",
    "task246_dream_question_generation",
    "task247_dream_answer_generation",
    "task581_socialiqa_question_generation",
    "task568_circa_question_generation",
    "task081_piqa_wrong_answer_generation",
    "task1293_kilt_tasks_hotpotqa_question_answering",
    "task227_clariq_classification",
    "task151_tomqa_find_location_easy_clean",
    "task898_freebase_qa_answer_generation",
    "task046_miscellaneous_question_typing",
    "task900_freebase_qa_category_classification",
    "task1596_event2mind_text_generation_2",
    "task1595_event2mind_text_generation_1",
    "task1360_numer_sense_multiple_choice_qa_generation",
    "task1712_poki_classification",
    "task453_swag_answer_generation",
    "task388_torque_token_classification",
    "task141_odd-man-out_classification_category",
    "task142_odd-man-out_classification_no_category",
    "task292_storycommonsense_character_text_generation",
    "task618_amazonreview_summary_text_generation"
]
different_tasks = [
 "task846_pubmedqa_classification",
    "task1711_poki_text_generation",
    "task268_casehold_legal_answer_generation",
    "task851_synthetic_multiply_evens",
    "task1729_personachat_generate_next",
    "task305_jeopardy_answer_generation_normal",
    "task075_squad1.1_answer_generation",
    "task848_pubmedqa_classification",
    "task1167_penn_treebank_coarse_pos_tagging",
    "task1422_mathqa_physics",
    "task103_facts2story_long_text_generation",
    "task160_replace_letter_in_a_sentence",
    "task1389_hellaswag_completion",
    "task1336_peixian_equity_evaluation_corpus_gender_classifier",
    "task380_boolq_yes_no_question",
    "task1444_round_power_of_two",
    "task1291_multi_news_summarization",
    "task170_hotpotqa_answer_generation",
    "task905_hate_speech_offensive_classification",
    "task212_logic2text_classification",
    "task594_sciq_question_generation",
    "task1730_personachat_choose_next",
    "task308_jeopardy_answer_generation_all",
    "task849_pubmedqa_answer_generation",
    "task429_senteval_tense",
    "task852_synthetic_multiply_odds",
    "task067_abductivenli_answer_generation",
    "task493_review_polarity_classification",
    "task592_sciq_incorrect_answer_generation",
    "task577_curiosity_dialogs_classification",
    "task1419_mathqa_gain",
    "task326_jigsaw_classification_obscene",
    "task934_turk_simplification",
    "task306_jeopardy_answer_generation_double",
    "task369_synthetic_remove_odds",
    "task405_narrativeqa_question_generation",
    "task310_race_classification",
    "task605_find_the_longest_common_subsequence_in_two_lists",
    "task191_hotpotqa_question_generation",
    "task521_trivia_question_classification",
    "task088_identify_typo_verification",
    "task194_duorc_answer_generation",
    "task110_logic2text_sentence_generation",
    "task845_pubmedqa_question_generation",
    "task071_abductivenli_answer_generation",
    "task904_hate_speech_offensive_classification",
    "task371_synthetic_product_of_list",
    "task1296_wiki_hop_question_answering",
    "task155_count_nouns_verbs",
    "task400_paws_paraphrase_classification",
    "task311_race_question_generation",
    "task606_sum_of_all_numbers_in_list_between_positions_i_and_j",
    "task611_mutual_multi_turn_dialogue",
    "task323_jigsaw_classification_sexually_explicit",
    "task339_record_answer_generation",
    "task183_rhyme_generation",
    "task366_synthetic_return_primes",
    "task072_abductivenli_answer_generation",
    "task210_logic2text_structured_text_generation",
    "task325_jigsaw_classification_identity_attack",
    "task1290_xsum_summarization",
    "task1168_brown_coarse_pos_tagging",
    "task750_aqua_multiple_choice_answering",
    "task850_synthetic_longest_palindrome",
    "task287_casehold_legal_incorrect_answer_generation",
    "task177_para-nmt_paraphrasing",
    "task1445_closest_integers",
    "task285_imdb_answer_generation",
    "task847_pubmedqa_question_generation",
    "task302_record_classification",
    "task365_synthetic_remove_vowels",
    "task085_unnatural_addsub_arithmetic",
    "task322_jigsaw_classification_threat",
    "task649_race_blank_question_generation",
    "task382_hybridqa_answer_generation",
    "task574_air_dialogue_sentence_generation",
    "task636_extract_and_sort_unique_alphabets_in_a_list",
    "task182_duorc_question_generation",
    "task587_amazonfood_polarity_correction_classification",
    "task142_odd-man-out_classification_no_category",
    "task368_synthetic_even_or_odd_calculation",
    "task111_asset_sentence_simplification",
    "task002_quoref_answer_generation",
    "task1285_kpa_keypoint_matching",
    "task284_imdb_classification",
    "task755_find_longest_substring_and_replace_its_sorted_lowercase_version_in_both_lists",
    "task092_check_prime_classification",
    "task413_mickey_en_sentence_perturbation_generation",
    "task583_udeps_eng_coarse_pos_tagging",
    "task294_storycommonsense_motiv_text_generation",
    "task591_sciq_answer_generation",
    "task430_senteval_subject_count",
    "task1443_string_to_number",
    "task176_break_decompose_questions",
    "task328_jigsaw_classification_insult",
    "task128_scan_structured_text_generation_command_action_short",
    "task303_record_incorrect_answer_generation",
    "task026_drop_question_generation",
    "task279_stereoset_classification_stereotype",
    "task1446_farthest_integers",
    "task1727_wiqa_what_is_the_effect",
    "task114_is_the_given_word_longest",
    "task1510_evalution_relation_extraction",
    "task373_synthetic_round_tens_place",
    "task565_circa_answer_generation",
    "task929_products_reviews_classification",
    "task756_find_longert_substring_and_return_all_unique_alphabets_in_it",
    "task270_csrg_counterfactual_context_generation",
    "task637_extract_and_sort_unique_digits_in_a_list",
    "task901_freebase_qa_category_question_generation",
    "task126_scan_structured_text_generation_command_action_all",
    "task061_ropes_answer_generation",
    "task300_storycloze_order_generation",
    "task141_odd-man-out_classification_category",
    "task367_synthetic_remove_floats",
    "task347_hybridqa_incorrect_answer_generation",
    "task301_record_question_generation",
    "task475_yelp_polarity_classification",
    "task269_csrg_counterfactual_story_generation",
    "task309_race_answer_generation",
    "task488_extract_all_alphabetical_elements_from_list_in_order",
    "task1507_boolean_temporal_reasoning",
    "task588_amazonfood_rating_classification",
    "task1217_atomic_answer_generation",
    "task376_reverse_order_of_words"
]
sample_num = 6000

def write_jsonl(output_path, instances):
    with jsonlines.open(output_path, 'w') as writer:
        writer.write_all(instances)

if __name__=="__main__":
    similar_instances = get_all_instances(dataset_path, similar_tasks, sample_num)
    write_jsonl(f"src/data/sampled/similar_categories_sampled_{len(similar_instances)}.jsonl", similar_instances)
    different_instances = get_all_instances(dataset_path, different_tasks, sample_num)
    write_jsonl(f"src/data/sampled/different_categories_sampled_{len(similar_instances)}.jsonl", different_instances)

